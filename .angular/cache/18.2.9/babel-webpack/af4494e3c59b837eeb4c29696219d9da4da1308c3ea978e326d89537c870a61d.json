{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersListService {\n  constructor(http) {\n    this.http = http;\n    this.path = environment.api;\n  }\n  getUsersList() {\n    const url = this.path + '/Users';\n    return this.http.get(url);\n  }\n  setUser(userObject) {\n    const url = this.path + '/Users';\n    console.log('serviceUser', userObject);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let myUserJSON = JSON.stringify(userObject);\n    // Enviar la petición con los headers configurados\n    this.http.post(url, JSON.stringify(userObject), {\n      headers: headers\n    }).subscribe({\n      next: rta => console.log('Respuesta del servidor:', rta),\n      error: error => console.error('Error:', error)\n    });\n  }\n  static {\n    this.ɵfac = function UsersListService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UsersListService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsersListService,\n      factory: UsersListService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","HttpHeaders","UsersListService","constructor","http","path","api","getUsersList","url","get","setUser","userObject","console","log","headers","myUserJSON","JSON","stringify","post","subscribe","next","rta","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\services\\users-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { User } from '../interfaces/UsersInterfaces';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersListService {\r\n  private path = environment.api;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsersList() {\r\n    const url = this.path + '/Users';\r\n    return this.http.get<User[]>(url);\r\n  }\r\n\r\n  setUser(userObject: User) {\r\n    const url = this.path + '/Users';\r\n    console.log('serviceUser', userObject);\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n\r\n    let myUserJSON = JSON.stringify(userObject);\r\n\r\n    // Enviar la petición con los headers configurados\r\n    this.http\r\n      .post(url, JSON.stringify(userObject), { headers: headers })\r\n      .subscribe({\r\n        next: (rta) => console.log('Respuesta del servidor:', rta),\r\n        error: (error) => console.error('Error:', error),\r\n      });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,mCAAmC;AAE/D,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,IAAI,GAAGL,WAAW,CAACM,GAAG;EAES;EAEvCC,YAAYA,CAAA;IACV,MAAMC,GAAG,GAAG,IAAI,CAACH,IAAI,GAAG,QAAQ;IAChC,OAAO,IAAI,CAACD,IAAI,CAACK,GAAG,CAASD,GAAG,CAAC;EACnC;EAEAE,OAAOA,CAACC,UAAgB;IACtB,MAAMH,GAAG,GAAG,IAAI,CAACH,IAAI,GAAG,QAAQ;IAChCO,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,UAAU,CAAC;IAEtC,MAAMG,OAAO,GAAG,IAAIb,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IAEF,IAAIc,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC;IAE3C;IACA,IAAI,CAACP,IAAI,CACNc,IAAI,CAACV,GAAG,EAAEQ,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC,EAAE;MAAEG,OAAO,EAAEA;IAAO,CAAE,CAAC,CAC3DK,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAKT,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,GAAG,CAAC;MAC1DC,KAAK,EAAGA,KAAK,IAAKV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK;KAChD,CAAC;EACN;;;uCA3BWpB,gBAAgB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBxB,gBAAgB;MAAAyB,OAAA,EAAhBzB,gBAAgB,CAAA0B,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}