{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { inject } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { FormControl, Validators, FormsModule, ReactiveFormsModule, FormGroup } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatError, MatFormFieldModule, MatLabel } from '@angular/material/form-field';\nimport { MatDialog, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogTitle, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/products-service.service\";\nimport * as i2 from \"@angular/material/table\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/menu\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/dialog\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/common\";\nfunction AppProductComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppProductComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"div\", 19)(2, \"p\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", product_r1.product_id, \" \");\n  }\n}\nfunction AppProductComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Nombre \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppProductComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"div\", 19)(2, \"p\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", product_r2.product_name, \" \");\n  }\n}\nfunction AppProductComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" ID Categor\\u00EDa \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppProductComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"div\", 19)(2, \"p\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", product_r3.category_id, \" \");\n  }\n}\nfunction AppProductComponent_th_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Nombre Categor\\u00EDa \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppProductComponent_td_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"div\", 19)(2, \"p\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", product_r4.productCategories.category_name, \" \");\n  }\n}\nfunction AppProductComponent_th_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 21);\n  }\n}\nfunction AppProductComponent_td_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 22)(1, \"button\", 23)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"more_vert\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-menu\", null, 0)(6, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AppProductComponent_td_24_Template_button_click_6_listener() {\n      const element_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateProduct(element_r6));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AppProductComponent_td_24_Template_button_click_11_listener() {\n      const element_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteProduct(element_r6.product_id));\n    });\n    i0.ɵɵelementStart(12, \"mat-icon\");\n    i0.ɵɵtext(13, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\");\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const productMenu_r8 = i0.ɵɵreference(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"matMenuTriggerFor\", productMenu_r8);\n  }\n}\nfunction AppProductComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\nfunction AppProductComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 26);\n  }\n}\nfunction CreateProductDialog_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"El nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateProductDialog_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r1.category_id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", category_r1.category_name, \" \");\n  }\n}\nfunction EditProductDialog_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"El nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDialog_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r1.category_id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", category_r1.category_name, \" \");\n  }\n}\nexport class AppProductComponent {\n  constructor(productService, cdr) {\n    this.productService = productService;\n    this.cdr = cdr;\n    this.displayedProductColumns = ['id', 'product_name', 'category_id', 'category_name', 'actions'];\n    this.productsList = [];\n    this.productsCatgories = [];\n    this.dialog = inject(MatDialog);\n  }\n  ngOnInit() {\n    this.productService.getProductsList().subscribe(productsList => {\n      this.productsList = productsList;\n      console.log(this.productsList);\n      this.cdr.detectChanges();\n    });\n    this.getProductsCategories();\n  }\n  openDialog() {\n    this.dialog.open(CreateProductDialog, {\n      width: '600px'\n    });\n  }\n  updateProduct(product) {\n    console.log(product);\n    this.dialog.open(EditProductDialog, {\n      width: '600px',\n      data: product\n    });\n  }\n  deleteProduct(productId) {\n    console.log(productId);\n    Swal.fire({\n      title: '¿Estás seguro de eliminar este usuario?',\n      text: 'Esta acción no se puede deshacer',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.productService.deleteProduct(productId).subscribe({\n          next: rta => {\n            Swal.fire({\n              title: '¡Hecho!',\n              text: 'El usuario ha sido eliminado.',\n              icon: 'success'\n            }).then(() => {\n              this.reloadProductsList();\n            });\n          },\n          error: error => {\n            console.error('Error de validación:', error.error.errors);\n            Swal.fire({\n              title: 'Error',\n              text: 'Ocurrió un error al eliminar el usuario.',\n              icon: 'error'\n            });\n            if (error.error.errors) {\n              for (const key in error.error.errors) {\n                if (error.error.errors.hasOwnProperty(key)) {\n                  console.log(`Error en el campo ${key}:`, error.error.errors[key]);\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n  reloadProductsList() {\n    this.productService.getProductsList().subscribe(productsList => {\n      this.productsList = productsList;\n      console.log('Lista actualizada de productsList:', this.productsList);\n    });\n  }\n  getProductsCategories() {\n    this.productService.getProductsCategoriesList().subscribe(productsCatgories => {\n      this.productsCatgories = productsCatgories;\n      console.log('ProductCategories', this.productsCatgories);\n    });\n  }\n  static {\n    this.ɵfac = function AppProductComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppProductComponent)(i0.ɵɵdirectiveInject(i1.ProductsServiceService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppProductComponent,\n      selectors: [[\"app-tables\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 27,\n      vars: 3,\n      consts: [[\"productMenu\", \"matMenu\"], [1, \"cardWithShadow\"], [1, \"m-b-10\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"table-responsive\"], [\"mat-table\", \"\", 1, \"w-100\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", \"class\", \"f-w-600 mat-subtitle-1 f-s-14 p-l-0\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"p-l-0\", 4, \"matCellDef\"], [\"matColumnDef\", \"product_name\"], [\"matColumnDef\", \"category_id\"], [\"matColumnDef\", \"category_name\"], [\"matColumnDef\", \"actions\"], [\"mat-header-cell\", \"\", \"class\", \"f-w-600 mat-subtitle-1 f-s-14\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"mat-body-1\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\", 1, \"f-w-600\", \"mat-subtitle-1\", \"f-s-14\", \"p-l-0\"], [\"mat-cell\", \"\", 1, \"p-l-0\"], [1, \"d-flex\", \"align-items-center\"], [1, \"f-s-14\"], [\"mat-header-cell\", \"\", 1, \"f-w-600\", \"mat-subtitle-1\", \"f-s-14\"], [\"mat-cell\", \"\", 1, \"mat-body-1\"], [\"mat-icon-button\", \"\", 3, \"matMenuTriggerFor\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n      template: function AppProductComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-header\")(2, \"mat-card-title-group\", 2)(3, \"mat-card-title\");\n          i0.ɵɵtext(4, \"Listado de Productos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AppProductComponent_Template_button_click_5_listener() {\n            return ctx.openDialog();\n          });\n          i0.ɵɵtext(6, \"Crear Producto\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"div\", 4)(9, \"table\", 5);\n          i0.ɵɵelementContainerStart(10, 6);\n          i0.ɵɵtemplate(11, AppProductComponent_th_11_Template, 2, 0, \"th\", 7)(12, AppProductComponent_td_12_Template, 4, 1, \"td\", 8);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(13, 9);\n          i0.ɵɵtemplate(14, AppProductComponent_th_14_Template, 2, 0, \"th\", 7)(15, AppProductComponent_td_15_Template, 4, 1, \"td\", 8);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(16, 10);\n          i0.ɵɵtemplate(17, AppProductComponent_th_17_Template, 2, 0, \"th\", 7)(18, AppProductComponent_td_18_Template, 4, 1, \"td\", 8);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(19, 11);\n          i0.ɵɵtemplate(20, AppProductComponent_th_20_Template, 2, 0, \"th\", 7)(21, AppProductComponent_td_21_Template, 4, 1, \"td\", 8);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(22, 12);\n          i0.ɵɵtemplate(23, AppProductComponent_th_23_Template, 1, 0, \"th\", 13)(24, AppProductComponent_td_24_Template, 16, 1, \"td\", 14);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(25, AppProductComponent_tr_25_Template, 1, 0, \"tr\", 15)(26, AppProductComponent_tr_26_Template, 1, 0, \"tr\", 16);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"dataSource\", ctx.productsList);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedProductColumns);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedProductColumns);\n        }\n      },\n      dependencies: [MatTableModule, i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow, CommonModule, MatCardModule, i3.MatCard, i3.MatCardContent, i3.MatCardHeader, i3.MatCardTitle, i3.MatCardTitleGroup, MaterialModule, i4.MatMenu, i4.MatMenuItem, i4.MatMenuTrigger, i5.MatButton, i5.MatIconButton, i6.MatIcon, MatIconModule, MatMenuModule, MatButtonModule, MatDatepickerModule],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\nexport class CreateProductDialog {\n  constructor(productService, dialogRef) {\n    this.productService = productService;\n    this.dialogRef = dialogRef;\n    this.hide = true;\n    this.productsList = [];\n    this.productsCatgories = [];\n    this.productForm = new FormGroup({\n      productName: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    const currentYear = new Date().getFullYear();\n    this.maxDate = new Date(currentYear - 18, new Date().getMonth(), new Date().getDate());\n    this.getProductsCategories();\n  }\n  submitProduct() {\n    if (this.productForm.valid) {\n      let newProduct = {\n        product_id: 0,\n        product_name: this.productForm.controls['productName'].value ?? '',\n        category_id: this.productForm.controls['categoryId'].value ? parseInt(this.productForm.controls['categoryId'].value) : 0,\n        productCategories: {\n          category_id: 0,\n          category_name: '',\n          isDeleted: false\n        },\n        isDeleted: false\n      };\n      console.log(this.productForm.value);\n      this.productService.setProduct(newProduct).subscribe({\n        next: response => {\n          Swal.fire({\n            title: 'Producto Creado!',\n            text: 'La información del producto ha sido guardada correctamente.',\n            icon: 'success'\n          }).then(() => {\n            this.dialogRef.close(true);\n            window.location.reload();\n          });\n        },\n        error: error => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el producto.',\n            icon: 'error'\n          });\n        }\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n  getProductsCategories() {\n    this.productService.getProductsCategoriesList().subscribe(productsCatgories => {\n      this.productsCatgories = productsCatgories;\n      console.log('ProductCategories', this.productsCatgories);\n    });\n  }\n  static {\n    this.ɵfac = function CreateProductDialog_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CreateProductDialog)(i0.ɵɵdirectiveInject(i1.ProductsServiceService), i0.ɵɵdirectiveInject(i7.MatDialogRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateProductDialog,\n      selectors: [[\"create-product\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([provideNativeDateAdapter()]), i0.ɵɵStandaloneFeature],\n      decls: 24,\n      vars: 3,\n      consts: [[\"mat-dialog-title\", \"\"], [1, \"example-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-lg-6\", \"m-b-8\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"productName\"], [\"appearance\", \"outline\"], [\"formControlName\", \"categoryId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"end\"], [\"mat-stroked-button\", \"\", \"type\", \" submit \", \"color\", \"primary \", 1, \"m-r-8\", 3, \"click\"], [\"mat-stroked-button\", \"\", \"color\", \"warn \", \"mat-dialog-close\", \"\"], [3, \"value\"]],\n      template: function CreateProductDialog_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Crear Productos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"p\");\n          i0.ɵɵtext(4, \" Complete la siguiente informaci\\u00F3n para crear productos. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateProductDialog_Template_form_ngSubmit_5_listener() {\n            return ctx.submitProduct();\n          });\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"mat-form-field\", 4)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Nombre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 5);\n          i0.ɵɵtemplate(12, CreateProductDialog_Conditional_12_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 3)(14, \"mat-form-field\", 6)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"Selecciona una categor\\u00EDa\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-select\", 7);\n          i0.ɵɵtemplate(18, CreateProductDialog_mat_option_18_Template, 2, 2, \"mat-option\", 8);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(19, \"mat-dialog-actions\", 9)(20, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function CreateProductDialog_Template_button_click_20_listener() {\n            return ctx.submitProduct();\n          });\n          i0.ɵɵtext(21, \"Crear Producto\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 11);\n          i0.ɵɵtext(23, \"Cancelar\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵconditional(((tmp_1_0 = ctx.productForm.get(\"firstName\")) == null ? null : tmp_1_0.hasError(\"required\")) ? 12 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.productsCatgories);\n        }\n      },\n      dependencies: [MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose, MatButtonModule, i5.MatButton, MatError, FormsModule, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, ReactiveFormsModule, i8.FormGroupDirective, i8.FormControlName, MatLabel, MatFormFieldModule, i9.MatFormField, MatInputModule, i10.MatInput, MatDatepickerModule, MatIconModule, MatOptionModule, i11.MatOption, MatSelectModule, i12.MatSelect, CommonModule, i13.NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\nexport class EditProductDialog {\n  constructor(dialogRef, data, productService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.productService = productService;\n    this.hide = true;\n    this.productId = 0;\n    this.productsList = [];\n    this.productsCatgories = [];\n    this.productForm = new FormGroup({\n      productName: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    const currentYear = new Date().getFullYear();\n    this.maxDate = new Date(currentYear - 18, new Date().getMonth(), new Date().getDate());\n    this.getProductsCategories();\n    this.productForm.patchValue({\n      productName: this.data.product_name,\n      categoryId: this.data.category_id.toString()\n    });\n  }\n  submitProductUpdate() {\n    if (this.productForm.valid) {\n      this.productId = this.data.product_id;\n      let newProduct = {\n        product_id: this.data.product_id,\n        product_name: this.productForm.controls['productName'].value ?? '',\n        category_id: this.productForm.controls['categoryId'].value ? parseInt(this.productForm.controls['categoryId'].value) : 0,\n        productCategories: {\n          category_id: 0,\n          category_name: '',\n          isDeleted: false\n        },\n        isDeleted: false\n      };\n      this.productService.updateProduct(newProduct, this.data.product_id).subscribe({\n        next: response => {\n          Swal.fire({\n            title: '¡Producto actualizado!',\n            text: 'La información del Producto ha sido actualizada correctamente.',\n            icon: 'success'\n          }).then(() => {\n            this.dialogRef.close(true);\n            window.location.reload();\n          });\n        },\n        error: error => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el Producto.',\n            icon: 'error'\n          });\n        }\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n  getProductsCategories() {\n    this.productService.getProductsCategoriesList().subscribe(productsCatgories => {\n      this.productsCatgories = productsCatgories;\n      console.log('ProductCategories', this.productsCatgories);\n    });\n  }\n  static {\n    this.ɵfac = function EditProductDialog_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EditProductDialog)(i0.ɵɵdirectiveInject(i7.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.ProductsServiceService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditProductDialog,\n      selectors: [[\"edit-product\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([provideNativeDateAdapter()]), i0.ɵɵStandaloneFeature],\n      decls: 24,\n      vars: 3,\n      consts: [[\"mat-dialog-title\", \"\"], [1, \"example-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-lg-6\", \"m-b-8\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"productName\"], [\"appearance\", \"outline\"], [\"formControlName\", \"categoryId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"end\"], [\"mat-stroked-button\", \"\", \"type\", \" submit \", \"color\", \"primary \", 1, \"m-r-8\", 3, \"click\"], [\"mat-stroked-button\", \"\", \"color\", \"warn \", \"mat-dialog-close\", \"\"], [3, \"value\"]],\n      template: function EditProductDialog_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Edotar Productos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"p\");\n          i0.ɵɵtext(4, \" Complete la siguiente informaci\\u00F3n para editar productos. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function EditProductDialog_Template_form_ngSubmit_5_listener() {\n            return ctx.submitProductUpdate();\n          });\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"mat-form-field\", 4)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Nombre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 5);\n          i0.ɵɵtemplate(12, EditProductDialog_Conditional_12_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 3)(14, \"mat-form-field\", 6)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"Selecciona una categor\\u00EDa\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-select\", 7);\n          i0.ɵɵtemplate(18, EditProductDialog_mat_option_18_Template, 2, 2, \"mat-option\", 8);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(19, \"mat-dialog-actions\", 9)(20, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function EditProductDialog_Template_button_click_20_listener() {\n            return ctx.submitProductUpdate();\n          });\n          i0.ɵɵtext(21, \"Crear Producto\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 11);\n          i0.ɵɵtext(23, \"Cancelar\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵconditional(((tmp_1_0 = ctx.productForm.get(\"firstName\")) == null ? null : tmp_1_0.hasError(\"required\")) ? 12 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.productsCatgories);\n        }\n      },\n      dependencies: [MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose, MatButtonModule, i5.MatButton, MatError, FormsModule, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, ReactiveFormsModule, i8.FormGroupDirective, i8.FormControlName, MatLabel, MatFormFieldModule, i9.MatFormField, MatInputModule, i10.MatInput, MatDatepickerModule, MatIconModule],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","inject","MatCardModule","MatTableModule","MaterialModule","MatIconModule","MatMenuModule","MatButtonModule","MatDatepickerModule","MatSelectModule","MatOptionModule","FormControl","Validators","FormsModule","ReactiveFormsModule","FormGroup","MatInputModule","MatError","MatFormFieldModule","MatLabel","MatDialog","MatDialogActions","MatDialogClose","MatDialogContent","MatDialogTitle","MAT_DIALOG_DATA","provideNativeDateAdapter","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","product_r1","product_id","product_r2","product_name","product_r3","category_id","product_r4","productCategories","category_name","ɵɵelement","ɵɵlistener","AppProductComponent_td_24_Template_button_click_6_listener","element_r6","ɵɵrestoreView","_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","updateProduct","AppProductComponent_td_24_Template_button_click_11_listener","deleteProduct","ɵɵproperty","productMenu_r8","category_r1","AppProductComponent","constructor","productService","cdr","displayedProductColumns","productsList","productsCatgories","dialog","ngOnInit","getProductsList","subscribe","console","log","detectChanges","getProductsCategories","openDialog","open","CreateProductDialog","width","product","EditProductDialog","data","productId","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","next","rta","reloadProductsList","error","errors","key","hasOwnProperty","getProductsCategoriesList","ɵɵdirectiveInject","i1","ProductsServiceService","ChangeDetectorRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppProductComponent_Template","rf","ctx","AppProductComponent_Template_button_click_5_listener","ɵɵelementContainerStart","ɵɵtemplate","AppProductComponent_th_11_Template","AppProductComponent_td_12_Template","AppProductComponent_th_14_Template","AppProductComponent_td_15_Template","AppProductComponent_th_17_Template","AppProductComponent_td_18_Template","AppProductComponent_th_20_Template","AppProductComponent_td_21_Template","AppProductComponent_th_23_Template","AppProductComponent_td_24_Template","AppProductComponent_tr_25_Template","AppProductComponent_tr_26_Template","i2","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i3","MatCard","MatCardContent","MatCardHeader","MatCardTitle","MatCardTitleGroup","i4","MatMenu","MatMenuItem","MatMenuTrigger","i5","MatButton","MatIconButton","i6","MatIcon","encapsulation","changeDetection","dialogRef","hide","productForm","productName","required","categoryId","currentYear","Date","getFullYear","maxDate","getMonth","getDate","submitProduct","valid","newProduct","controls","value","parseInt","isDeleted","setProduct","response","close","window","location","reload","i7","MatDialogRef","ɵɵProvidersFeature","CreateProductDialog_Template","CreateProductDialog_Template_form_ngSubmit_5_listener","CreateProductDialog_Conditional_12_Template","CreateProductDialog_mat_option_18_Template","CreateProductDialog_Template_button_click_20_listener","ɵɵconditional","tmp_1_0","get","hasError","i8","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i9","MatFormField","i10","MatInput","i11","MatOption","i12","MatSelect","i13","NgForOf","patchValue","toString","submitProductUpdate","EditProductDialog_Template","EditProductDialog_Template_form_ngSubmit_5_listener","EditProductDialog_Conditional_12_Template","EditProductDialog_mat_option_18_Template","EditProductDialog_Template_button_click_20_listener"],"sources":["D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-table\\product.component.ts","D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-table\\product.component.html","D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-table\\create-product.html","D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-table\\edit-product.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  inject,\n  Inject,\n} from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport {\n  FormControl,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n  FormGroup,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport {\n  MatError,\n  MatFormFieldModule,\n  MatLabel,\n} from '@angular/material/form-field';\nimport {\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { provideNativeDateAdapter } from '@angular/material/core';\n\nimport { UsersListService } from 'src/app/services/users-list.service';\nimport { User } from 'src/app/interfaces/UsersInterfaces';\nimport Swal from 'sweetalert2';\nimport {\n  Product,\n  ProductCategory,\n} from 'src/app/interfaces/ProductsInterfaces';\nimport { ProductsServiceService } from 'src/app/services/products-service.service';\n\n// table 1\nexport interface productsData {\n  id: number;\n  imagePath: string;\n  uname: string;\n  budget: number;\n  priority: string;\n}\n\n@Component({\n  selector: 'app-tables',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    CommonModule,\n    MatCardModule,\n    MaterialModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatIconModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './product.component.html',\n})\nexport class AppProductComponent implements OnInit {\n  displayedProductColumns: string[] = [\n    'id',\n    'product_name',\n    'category_id',\n    'category_name',\n    'actions',\n  ];\n  productsList: Product[] = [];\n  productsCatgories: ProductCategory[] = [];\n  myCProduct: Product | null;\n  readonly dialog = inject(MatDialog);\n\n  constructor(\n    private productService: ProductsServiceService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.productService.getProductsList().subscribe((productsList) => {\n      this.productsList = productsList;\n      console.log(this.productsList);\n      this.cdr.detectChanges();\n    });\n    this.getProductsCategories();\n  }\n\n  openDialog() {\n    this.dialog.open(CreateProductDialog, {\n      width: '600px',\n    });\n  }\n\n  updateProduct(product: Product) {\n    console.log(product);\n\n    this.dialog.open(EditProductDialog, {\n      width: '600px',\n      data: product,\n    });\n  }\n\n  deleteProduct(productId: number) {\n    console.log(productId);\n    Swal.fire({\n      title: '¿Estás seguro de eliminar este usuario?',\n      text: 'Esta acción no se puede deshacer',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminar',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.productService.deleteProduct(productId).subscribe({\n          next: (rta) => {\n            Swal.fire({\n              title: '¡Hecho!',\n              text: 'El usuario ha sido eliminado.',\n              icon: 'success',\n            }).then(() => {\n              this.reloadProductsList();\n            });\n          },\n          error: (error) => {\n            console.error('Error de validación:', error.error.errors);\n\n            Swal.fire({\n              title: 'Error',\n              text: 'Ocurrió un error al eliminar el usuario.',\n              icon: 'error',\n            });\n\n            if (error.error.errors) {\n              for (const key in error.error.errors) {\n                if (error.error.errors.hasOwnProperty(key)) {\n                  console.log(\n                    `Error en el campo ${key}:`,\n                    error.error.errors[key]\n                  );\n                }\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  reloadProductsList() {\n    this.productService.getProductsList().subscribe((productsList) => {\n      this.productsList = productsList;\n      console.log('Lista actualizada de productsList:', this.productsList);\n    });\n  }\n\n  getProductsCategories() {\n    this.productService\n      .getProductsCategoriesList()\n      .subscribe((productsCatgories) => {\n        this.productsCatgories = productsCatgories;\n        console.log('ProductCategories', this.productsCatgories);\n      });\n  }\n}\n\n@Component({\n  selector: 'create-product',\n  templateUrl: 'create-product.html',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n    MatButtonModule,\n    MatError,\n    FormsModule,\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatOptionModule,\n    MatSelectModule,\n    CommonModule,\n  ],\n  providers: [provideNativeDateAdapter()],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateProductDialog implements OnInit {\n  hide = true;\n  maxDate: Date;\n  productsList: Product[] = [];\n  productsCatgories: ProductCategory[] = [];\n  myCProduct: Product | null;\n\n  constructor(\n    private productService: ProductsServiceService,\n    public dialogRef: MatDialogRef<CreateProductDialog>\n  ) {}\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    this.maxDate = new Date(\n      currentYear - 18,\n      new Date().getMonth(),\n      new Date().getDate()\n    );\n\n    this.getProductsCategories();\n  }\n\n  productForm = new FormGroup({\n    productName: new FormControl('', [Validators.required]),\n    categoryId: new FormControl('', [Validators.required]),\n  });\n\n  submitProduct() {\n    if (this.productForm.valid) {\n      let newProduct: Product = {\n        product_id: 0,\n        product_name: this.productForm.controls['productName'].value ?? '',\n        category_id: this.productForm.controls['categoryId'].value\n          ? parseInt(this.productForm.controls['categoryId'].value)\n          : 0,\n        productCategories: {\n          category_id: 0,\n          category_name: '',\n          isDeleted: false,\n        },\n        isDeleted: false,\n      };\n      console.log(this.productForm.value);\n      this.productService.setProduct(newProduct).subscribe({\n        next: (response) => {\n          Swal.fire({\n            title: 'Producto Creado!',\n            text: 'La información del producto ha sido guardada correctamente.',\n            icon: 'success',\n          }).then(() => {\n            this.dialogRef.close(true);\n            window.location.reload();\n          });\n        },\n        error: (error) => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el producto.',\n            icon: 'error',\n          });\n        },\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n\n  getProductsCategories() {\n    this.productService\n      .getProductsCategoriesList()\n      .subscribe((productsCatgories) => {\n        this.productsCatgories = productsCatgories;\n        console.log('ProductCategories', this.productsCatgories);\n      });\n  }\n}\n\n@Component({\n  selector: 'edit-product',\n  templateUrl: 'edit-product.html',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n    MatButtonModule,\n    MatError,\n    FormsModule,\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatIconModule,\n  ],\n  providers: [provideNativeDateAdapter()],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditProductDialog implements OnInit {\n  hide = true;\n  maxDate: Date;\n  productId: number = 0;\n  productsList: Product[] = [];\n  productsCatgories: ProductCategory[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<EditProductDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: Product,\n    private productService: ProductsServiceService\n  ) {}\n\n  productForm = new FormGroup({\n    productName: new FormControl('', [Validators.required]),\n    categoryId: new FormControl('', [Validators.required]),\n  });\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    this.maxDate = new Date(\n      currentYear - 18,\n      new Date().getMonth(),\n      new Date().getDate()\n    );\n\n    this.getProductsCategories();\n\n    this.productForm.patchValue({\n      productName: this.data.product_name,\n      categoryId: this.data.category_id.toString(),\n    });\n  }\n\n  submitProductUpdate() {\n    if (this.productForm.valid) {\n      this.productId = this.data.product_id;\n\n      let newProduct: Product = {\n        product_id: this.data.product_id,\n        product_name: this.productForm.controls['productName'].value ?? '',\n        category_id: this.productForm.controls['categoryId'].value\n          ? parseInt(this.productForm.controls['categoryId'].value)\n          : 0,\n        productCategories: {\n          category_id: 0,\n          category_name: '',\n          isDeleted: false,\n        },\n        isDeleted: false,\n      };\n      this.productService.updateProduct(newProduct, this.data.product_id).subscribe({\n        next: (response) => {\n          Swal.fire({\n            title: '¡Producto actualizado!',\n            text: 'La información del Producto ha sido actualizada correctamente.',\n            icon: 'success',\n          }).then(() => {\n            this.dialogRef.close(true);\n            window.location.reload();\n          });\n        },\n        error: (error) => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el Producto.',\n            icon: 'error',\n          });\n        },\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n\n  getProductsCategories() {\n    this.productService\n      .getProductsCategoriesList()\n      .subscribe((productsCatgories) => {\n        this.productsCatgories = productsCatgories;\n        console.log('ProductCategories', this.productsCatgories);\n      });\n  }\n}\n","<mat-card class=\"cardWithShadow\">\n    <mat-card-header>\n        <mat-card-title-group class=\"m-b-10\">\n            <mat-card-title>Listado de Productos</mat-card-title>\n            <button mat-flat-button (click)=\"openDialog()\" color=\"primary\">Crear Producto</button>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        <div class=\"table-responsive\">\n            <table mat-table [dataSource]=\"productsList\" class=\"w-100\">\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef class=\"f-w-600 mat-subtitle-1 f-s-14 p-l-0\">\n                        ID\n                    </th>\n                    <td mat-cell *matCellDef=\"let product\" class=\"p-l-0\">\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"f-s-14\">\n                                {{ product.product_id }}\n                            </p>\n                        </div>\n                    </td>\n                </ng-container>\n\n\n                <!-- Número de Documento Column -->\n                <ng-container matColumnDef=\"product_name\">\n                    <th mat-header-cell *matHeaderCellDef class=\"f-w-600 mat-subtitle-1 f-s-14 p-l-0\">\n                        Nombre\n                    </th>\n                    <td mat-cell *matCellDef=\"let product\" class=\"p-l-0\">\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"f-s-14\">\n                                {{ product.product_name }}\n                            </p>\n                        </div>\n                    </td>\n                </ng-container>\n\n                <!-- productname Column -->\n                <ng-container matColumnDef=\"category_id\">\n                    <th mat-header-cell *matHeaderCellDef class=\"f-w-600 mat-subtitle-1 f-s-14 p-l-0\">\n                        ID Categoría\n                    </th>\n                    <td mat-cell *matCellDef=\"let product\" class=\"p-l-0\">\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"f-s-14\">\n                                {{ product.category_id }}\n                            </p>\n                        </div>\n                    </td>\n                </ng-container>\n\n                <!-- productname Column -->\n                <ng-container matColumnDef=\"category_name\">\n                    <th mat-header-cell *matHeaderCellDef class=\"f-w-600 mat-subtitle-1 f-s-14 p-l-0\">\n                        Nombre Categoría\n                    </th>\n                    <td mat-cell *matCellDef=\"let product\" class=\"p-l-0\">\n                        <div class=\"d-flex align-items-center\">\n                            <p class=\"f-s-14\">\n                                {{ product.productCategories.category_name }}\n                            </p>\n                        </div>\n                    </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef class=\"f-w-600 mat-subtitle-1 f-s-14\"></th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-body-1\">\n                        <button mat-icon-button [matMenuTriggerFor]=\"productMenu\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n                        <mat-menu #productMenu=\"matMenu\">\n                            <button mat-menu-item (click)=\"updateProduct(element)\">\n                                <mat-icon>edit</mat-icon>\n                                <span>Edit</span>\n                            </button>\n                            <button mat-menu-item (click)=\"deleteProduct(element.product_id)\">\n                                <mat-icon>delete</mat-icon>\n                                <span>Delete</span>\n                            </button>\n                        </mat-menu>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedProductColumns\"></tr>\n                <tr mat-row *matRowDef=\"let productRow; columns: displayedProductColumns\"></tr>\n            </table>\n        </div>\n    </mat-card-content>\n</mat-card>","<h2 mat-dialog-title>Crear Productos</h2>\r\n<mat-dialog-content>\r\n    <p>\r\n        Complete la siguiente información para crear productos.\r\n    </p>\r\n    <form class=\"example-form\" [formGroup]=\"productForm\" (ngSubmit)=\"submitProduct()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Nombre</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"productName\"> @if (productForm.get('firstName')?.hasError('required')) {\r\n                    <mat-error>El nombre es <strong>obligatorio.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-lg-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Selecciona una categoría</mat-label>\r\n                    <mat-select formControlName=\"categoryId\">\r\n                        <mat-option *ngFor=\"let category of productsCatgories\" [value]=\"category.category_id\">\r\n                            {{ category.category_name }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\" submit \" color=\"primary \" class=\"m-r-8 \" (click)=\"submitProduct()\">Crear Producto</button>\r\n    <button mat-stroked-button color=\"warn \" mat-dialog-close>Cancelar</button>\r\n</mat-dialog-actions>","<h2 mat-dialog-title>Edotar Productos</h2>\r\n<mat-dialog-content>\r\n    <p>\r\n        Complete la siguiente información para editar productos.\r\n    </p>\r\n    <form class=\"example-form\" [formGroup]=\"productForm\" (ngSubmit)=\"submitProductUpdate()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Nombre</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"productName\"> @if (productForm.get('firstName')?.hasError('required')) {\r\n                    <mat-error>El nombre es <strong>obligatorio.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-lg-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Selecciona una categoría</mat-label>\r\n                    <mat-select formControlName=\"categoryId\">\r\n                        <mat-option *ngFor=\"let category of productsCatgories\" [value]=\"category.category_id\">\r\n                            {{ category.category_name }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\" submit \" color=\"primary \" class=\"m-r-8 \" (click)=\"submitProductUpdate()\">Crear Producto</button>\r\n    <button mat-stroked-button color=\"warn \" mat-dialog-close>Cancelar</button>\r\n</mat-dialog-actions>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}