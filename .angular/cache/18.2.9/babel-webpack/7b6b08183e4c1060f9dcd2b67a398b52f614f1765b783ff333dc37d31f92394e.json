{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { FormControl, Validators, FormsModule, ReactiveFormsModule, FormGroup } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatError, MatFormFieldModule, MatLabel } from '@angular/material/form-field';\nimport { MatDialog, MatDialogActions, MatDialogClose, MatDialogContent, MatDialogTitle, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/products-service.service\";\nimport * as i2 from \"src/app/services/collection.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/datepicker\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"src/app/services/product-details.service\";\nfunction CreateProductDetailsDialog_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La cantidad en stock es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatoria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateProductDetailsDialog_Conditional_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ingrese las libras por paquete para \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"continuar.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateProductDetailsDialog_Conditional_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"El costo del producto es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateProductDetailsDialog_Conditional_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La cantidad m\\u00EDnima es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatoria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateProductDetailsDialog_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const collection_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", collection_r2.collectionPoint_id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", collection_r2.pointName, \" \");\n  }\n}\nfunction CreateProductDetailsDialog_Conditional_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"El punto de recolecci\\u00F3n es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateProductDetailsDialog_Conditional_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La fecha de cosecha es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatoria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDetailDialog_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La cantidad en stock es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatoria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDetailDialog_Conditional_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ingrese las libras por paquete para \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"continuar.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDetailDialog_Conditional_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"El costo del producto es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDetailDialog_Conditional_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La cantidad m\\u00EDnima es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatoria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDetailDialog_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const collection_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", collection_r2.collectionPoint_id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", collection_r2.pointName, \" \");\n  }\n}\nfunction EditProductDetailDialog_Conditional_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"El punto de recolecci\\u00F3n es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatorio.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditProductDetailDialog_Conditional_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La fecha de cosecha es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obligatoria.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nlet AppProductDetailsComponent = class AppProductDetailsComponent {\n  constructor(productService, productDetailService, cdr) {\n    this.productService = productService;\n    this.productDetailService = productDetailService;\n    this.cdr = cdr;\n    this.displayedProductDetailsColumns = ['id', 'product_name', 'category_name', 'quantityStock', 'weigthPoundsPack', 'startingPrice', 'minimunQuantity', 'pointName', 'harvestDate', 'actions'];\n    this.productsDetailsList = [];\n    this.productsCatgories = [];\n    this.dialog = inject(MatDialog);\n  }\n  ngOnInit() {\n    this.productDetailService.getProductsDetailsList().subscribe(productDetailList => {\n      this.productsDetailsList = productDetailList;\n      console.log(this.productsDetailsList);\n      this.cdr.detectChanges();\n    });\n    this.getProductsCategories();\n  }\n  openDialog() {\n    this.dialog.open(CreateProductDetailsDialog, {\n      width: '600px'\n    });\n  }\n  updateProduct(product) {\n    console.log(product);\n    this.dialog.open(EditProductDetailDialog, {\n      width: '600px',\n      data: product\n    });\n  }\n  deleteProduct(productId) {\n    Swal.fire({\n      title: '¿Estás seguro de eliminar este producto?',\n      text: 'Esta acción no se puede deshacer',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminar',\n      cancelButtonText: 'Cancelar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.productService.deleteProduct(productId).subscribe({\n          next: rta => {\n            Swal.fire({\n              title: '¡Hecho!',\n              text: 'El producto ha sido eliminado.',\n              icon: 'success'\n            }).then(() => {\n              this.reloadProductsDetailsList();\n              this.cdr.detectChanges();\n            });\n          },\n          error: error => {\n            console.error('Error de validación:', error.error.errors);\n            Swal.fire({\n              title: 'Error',\n              text: 'Ocurrió un error al eliminar el producto.',\n              icon: 'error'\n            });\n            if (error.error.errors) {\n              for (const key in error.error.errors) {\n                if (error.error.errors.hasOwnProperty(key)) {\n                  console.log(`Error en el campo ${key}:`, error.error.errors[key]);\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n  reloadProductsDetailsList() {\n    this.productDetailService.getProductsDetailsList().subscribe(productsList => {\n      this.productsDetailsList = productsList;\n      console.log('Lista actualizada de productsList:', this.productsDetailsList);\n    });\n  }\n  getProductsCategories() {\n    this.productService.getProductsCategoriesList().subscribe(productsCatgories => {\n      this.productsCatgories = productsCatgories;\n    });\n  }\n};\nAppProductDetailsComponent = __decorate([Component({\n  selector: 'app-product-details',\n  standalone: true,\n  imports: [MatTableModule, CommonModule, MatCardModule, MaterialModule, MatIconModule, MatMenuModule, MatButtonModule, MatDatepickerModule, MatIconModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './product.component.html'\n})], AppProductDetailsComponent);\nexport { AppProductDetailsComponent };\nexport class CreateProductDetailsDialog {\n  constructor(productService, collectionsService, dialogRef, changeDetector) {\n    this.productService = productService;\n    this.collectionsService = collectionsService;\n    this.dialogRef = dialogRef;\n    this.changeDetector = changeDetector;\n    this.hide = true;\n    this.productsList = [];\n    this.productsCatgories = [];\n    this.createdProductId = 0;\n    this.productForm = new FormGroup({\n      productName: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required])\n    });\n    this.productDetailsForm = new FormGroup({\n      stock: new FormControl('', [Validators.required]),\n      weigthPoundsPack: new FormControl('', [Validators.required]),\n      startingPrice: new FormControl('', [Validators.required]),\n      minimunQuantity: new FormControl('', [Validators.required]),\n      collectionPoint: new FormControl('', [Validators.required]),\n      harvestDate: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.maxDate = new Date();\n    this.getProductsCategories();\n    this.getCollectionsList();\n  }\n  submitProduct() {\n    if (this.productForm.valid) {\n      let newProduct = {\n        product_id: 0,\n        product_name: this.productForm.controls['productName'].value ?? '',\n        category_id: this.productForm.controls['categoryId'].value ? parseInt(this.productForm.controls['categoryId'].value) : 0,\n        productCategories: {\n          category_id: 0,\n          category_name: '',\n          isDeleted: false\n        },\n        isDeleted: false\n      };\n      this.productService.setProduct(newProduct).subscribe({\n        next: response => {\n          console.log(response);\n          this.createdProductId = response.product_id;\n          console.log(this.createdProductId);\n          this.changeDetector.detectChanges();\n        },\n        error: error => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el producto.',\n            icon: 'error'\n          });\n        }\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n  submitProductDetails() {\n    console.log(this.productDetailsForm);\n    if (this.productDetailsForm.valid) {\n      let harvestFormatDate = new Date(this.productDetailsForm.controls['harvestDate'].value ?? this.maxDate);\n      let unformattedPrice = this.removeCurrencyFormatting(this.productForm.get('startingPrice')?.value ?? '0');\n      let newProductDetails = {\n        prodDeta_id: 0,\n        product_id: this.createdProductId,\n        products: {\n          product_id: 0,\n          product_name: 'string',\n          category_id: 0,\n          productCategories: {\n            category_id: 0,\n            category_name: 'string',\n            isDeleted: false\n          },\n          isDeleted: false\n        },\n        quantityStock: this.productDetailsForm.controls['stock'].value ? parseInt(this.productDetailsForm.controls['stock'].value) : 0,\n        weigthPoundsPack: this.productDetailsForm.controls['weigthPoundsPack'].value ? parseInt(this.productDetailsForm.controls['weigthPoundsPack'].value) : 0,\n        startingPrice: parseInt(unformattedPrice),\n        minimunQuantity: this.productDetailsForm.controls['minimunQuantity'].value ? parseInt(this.productDetailsForm.controls['minimunQuantity'].value) : 0,\n        user_id: 1,\n        users: {\n          user_id: 0,\n          names: 'string',\n          last_names: 'string',\n          email: 'string',\n          document_number: 'string',\n          username: 'string',\n          password: 'string',\n          born_date: '2024-10-27T19:38:47.562Z',\n          userType_id: 0,\n          userTypes: {\n            userType_id: 0,\n            userType_name: 'string',\n            isDeleted: true\n          },\n          document_id: 0,\n          documents: {\n            document_id: 0,\n            document_name: 'string',\n            isDeleted: true\n          },\n          date: new Date(),\n          modified: new Date(),\n          modifiedBy: 'string',\n          isDeleted: false\n        },\n        collectionPoint_id: this.productDetailsForm.controls['collectionPoint'].value ? parseInt(this.productDetailsForm.controls['collectionPoint'].value) : 0,\n        collections: {\n          collectionPoint_id: 0,\n          pointName: 'string',\n          address: 'string',\n          isDeleted: false\n        },\n        harvestDate: harvestFormatDate,\n        isDeleted: false\n      };\n      this.productService.setProductDetails(newProductDetails).subscribe({\n        next: response => {\n          console.log(response);\n          Swal.fire({\n            title: '¡Usuario Creado!',\n            text: 'La información del usuario ha sido guardada correctamente.',\n            icon: 'success'\n          }).then(() => {\n            this.dialogRef.close(true);\n            this.changeDetector.detectChanges();\n          });\n        },\n        error: error => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el producto.',\n            icon: 'error'\n          });\n        }\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n  formatCurrencyInput(event) {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, ''); // Eliminar caracteres no numéricos\n    value = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(parseFloat(value) / 100); // Aplicar formato moneda\n    event.target.value = value;\n  }\n  removeCurrencyFormatting(value) {\n    return value.replace(/[^\\d.-]/g, '');\n  }\n  getProductsCategories() {\n    this.productService.getProductsCategoriesList().subscribe(productsCatgories => {\n      this.productsCatgories = productsCatgories;\n      console.log('ProductCategories', this.productsCatgories);\n    });\n  }\n  getCollectionsList() {\n    this.collectionsService.getCollectionsList().subscribe(collectionList => {\n      this.collectionsList = collectionList;\n      console.log('Lista actualizada de collectionsList:', this.collectionsList);\n    });\n  }\n  static {\n    this.ɵfac = function CreateProductDetailsDialog_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CreateProductDetailsDialog)(i0.ɵɵdirectiveInject(i1.ProductsServiceService), i0.ɵɵdirectiveInject(i2.CollectionService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateProductDetailsDialog,\n      selectors: [[\"create-product-details\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([provideNativeDateAdapter()]), i0.ɵɵStandaloneFeature],\n      decls: 52,\n      vars: 11,\n      consts: [[\"picker\", \"\"], [\"mat-dialog-title\", \"\"], [1, \"example-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-6\", \"m-b-8\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"stock\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"weigthPoundsPack\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"startingPrice\", 3, \"input\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"minimunQuantity\"], [\"formControlName\", \"collectionPoint\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-6\", \"m-b-8\"], [\"matInput\", \"\", \"formControlName\", \"harvestDate\", 3, \"matDatepicker\", \"max\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"align\", \"end\"], [\"mat-stroked-button\", \"\", \"color\", \"warn \", \"mat-dialog-close\", \"\"], [\"mat-flat-button\", \"\", \"type\", \" submit \", \"color\", \"primary \", 1, \"m-r-8\", 3, \"click\"], [3, \"value\"]],\n      template: function CreateProductDetailsDialog_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\", 1);\n          i0.ɵɵtext(1, \"Crear Detalle de Producto\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"p\");\n          i0.ɵɵtext(4, \" Complete la siguiente informaci\\u00F3n para crear el detalle de los productos. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateProductDetailsDialog_Template_form_ngSubmit_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submitProductDetails());\n          });\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"mat-form-field\", 5)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Stock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵtemplate(12, CreateProductDetailsDialog_Conditional_12_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 4)(14, \"mat-form-field\", 5)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"Libras por paquete\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 7);\n          i0.ɵɵtemplate(18, CreateProductDetailsDialog_Conditional_18_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 4)(20, \"mat-form-field\", 5)(21, \"mat-label\");\n          i0.ɵɵtext(22, \"Precio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"input\", 8);\n          i0.ɵɵlistener(\"input\", function CreateProductDetailsDialog_Template_input_input_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.formatCurrencyInput($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, CreateProductDetailsDialog_Conditional_24_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 4)(26, \"mat-form-field\", 5)(27, \"mat-label\");\n          i0.ɵɵtext(28, \"Cantidad m\\u00EDnima\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 9);\n          i0.ɵɵtemplate(30, CreateProductDetailsDialog_Conditional_30_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 4)(32, \"mat-form-field\", 5)(33, \"mat-label\");\n          i0.ɵɵtext(34, \"Selecciona un punto de recolecci\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"mat-select\", 10);\n          i0.ɵɵtemplate(36, CreateProductDetailsDialog_mat_option_36_Template, 2, 2, \"mat-option\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(37, CreateProductDetailsDialog_Conditional_37_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 12)(39, \"mat-form-field\", 5)(40, \"mat-label\");\n          i0.ɵɵtext(41, \"Fecha de cosecha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(42, \"input\", 13)(43, \"mat-datepicker-toggle\", 14)(44, \"mat-datepicker\", null, 0);\n          i0.ɵɵtemplate(46, CreateProductDetailsDialog_Conditional_46_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(47, \"mat-dialog-actions\", 15)(48, \"button\", 16);\n          i0.ɵɵtext(49, \"Cancelar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function CreateProductDetailsDialog_Template_button_click_50_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submitProductDetails());\n          });\n          i0.ɵɵtext(51, \"A\\u00F1adir Detalles de Producto\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_7_0;\n          let tmp_11_0;\n          const picker_r3 = i0.ɵɵreference(45);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.productDetailsForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵconditional(((tmp_2_0 = ctx.productDetailsForm.get(\"stock\")) == null ? null : tmp_2_0.hasError(\"required\")) ? 12 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(((tmp_3_0 = ctx.productDetailsForm.get(\"weigthPoundsPack\")) == null ? null : tmp_3_0.hasError(\"required\")) ? 18 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(((tmp_4_0 = ctx.productDetailsForm.get(\"startingPrice\")) == null ? null : tmp_4_0.hasError(\"required\")) ? 24 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(((tmp_5_0 = ctx.productDetailsForm.get(\"minimunQuantity\")) == null ? null : tmp_5_0.hasError(\"required\")) ? 30 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.collectionsList);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(((tmp_7_0 = ctx.productDetailsForm.get(\"collectionPoint\")) == null ? null : tmp_7_0.hasError(\"required\")) ? 37 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"matDatepicker\", picker_r3)(\"max\", ctx.maxDate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", picker_r3);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(((tmp_11_0 = ctx.productForm.get(\"harvestDate\")) == null ? null : tmp_11_0.hasError(\"required\")) ? 46 : -1);\n        }\n      },\n      dependencies: [MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose, MatButtonModule, i4.MatButton, MatError, FormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, ReactiveFormsModule, i5.FormGroupDirective, i5.FormControlName, MatLabel, MatFormFieldModule, i6.MatFormField, i6.MatSuffix, MatInputModule, i7.MatInput, MatDatepickerModule, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, MatIconModule, MatOptionModule, i9.MatOption, MatSelectModule, i10.MatSelect, CommonModule, i11.NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\nexport class EditProductDetailDialog {\n  constructor(dialogRef, data, productService, productDetailService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.productService = productService;\n    this.productDetailService = productDetailService;\n    this.hide = true;\n    this.productId = 0;\n    this.productsList = [];\n    this.productsCatgories = [];\n    this.productDetailsForm = new FormGroup({\n      stock: new FormControl('', [Validators.required]),\n      weigthPoundsPack: new FormControl('', [Validators.required]),\n      startingPrice: new FormControl('', [Validators.required]),\n      minimunQuantity: new FormControl('', [Validators.required]),\n      collectionPoint: new FormControl('', [Validators.required]),\n      harvestDate: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    const currentYear = new Date().getFullYear();\n    this.maxDate = new Date(currentYear - 18, new Date().getMonth(), new Date().getDate());\n    this.getProductsCategories();\n    this.productDetailsForm.patchValue({\n      stock: this.data.quantityStock.toString(),\n      weigthPoundsPack: this.data.weigthPoundsPack.toString(),\n      startingPrice: this.data.startingPrice.toString(),\n      minimunQuantity: this.data.minimunQuantity.toString(),\n      collectionPoint: this.data.collectionPoint_id.toString(),\n      harvestDate: this.data.harvestDate.toString()\n    });\n  }\n  submitProductDetails() {\n    if (this.productDetailsForm.valid) {\n      this.productId = this.data.product_id;\n      let harvestFormatDate = new Date(this.productDetailsForm.controls['harvestDate'].value ?? this.maxDate);\n      let unformattedPrice = this.removeCurrencyFormatting(this.productDetailsForm.get('startingPrice')?.value ?? '0');\n      let newProductDetails = {\n        prodDeta_id: 0,\n        product_id: this.data.product_id,\n        products: {\n          product_id: 0,\n          product_name: 'string',\n          category_id: 0,\n          productCategories: {\n            category_id: 0,\n            category_name: 'string',\n            isDeleted: false\n          },\n          isDeleted: false\n        },\n        quantityStock: this.productDetailsForm.controls['stock'].value ? parseInt(this.productDetailsForm.controls['stock'].value) : 0,\n        weigthPoundsPack: this.productDetailsForm.controls['weigthPoundsPack'].value ? parseInt(this.productDetailsForm.controls['weigthPoundsPack'].value) : 0,\n        startingPrice: parseInt(unformattedPrice),\n        minimunQuantity: this.productDetailsForm.controls['minimunQuantity'].value ? parseInt(this.productDetailsForm.controls['minimunQuantity'].value) : 0,\n        user_id: this.data.user_id,\n        users: {\n          user_id: 0,\n          names: 'string',\n          last_names: 'string',\n          email: 'string',\n          document_number: 'string',\n          username: 'string',\n          password: 'string',\n          born_date: '2024-10-27T19:38:47.562Z',\n          userType_id: 0,\n          userTypes: {\n            userType_id: 0,\n            userType_name: 'string',\n            isDeleted: true\n          },\n          document_id: 0,\n          documents: {\n            document_id: 0,\n            document_name: 'string',\n            isDeleted: true\n          },\n          date: new Date(),\n          modified: new Date(),\n          modifiedBy: 'string',\n          isDeleted: false\n        },\n        collectionPoint_id: this.productDetailsForm.controls['collectionPoint'].value ? parseInt(this.productDetailsForm.controls['collectionPoint'].value) : 0,\n        collections: {\n          collectionPoint_id: 0,\n          pointName: 'string',\n          address: 'string',\n          isDeleted: false\n        },\n        harvestDate: harvestFormatDate,\n        isDeleted: false\n      };\n      this.productDetailService.updateProductDetails(newProductDetails, this.data.product_id).subscribe({\n        next: response => {\n          console.log(response);\n          Swal.fire({\n            title: '¡Producto actualizado!',\n            text: 'La información del Producto ha sido actualizada correctamente.',\n            icon: 'success'\n          }).then(() => {\n            this.dialogRef.close(true);\n            window.location.reload();\n          });\n        },\n        error: error => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el Producto.',\n            icon: 'error'\n          });\n        }\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n  formatCurrencyInput(event) {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, ''); // Eliminar caracteres no numéricos\n    value = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(parseFloat(value) / 100); // Aplicar formato moneda\n    event.target.value = value;\n  }\n  removeCurrencyFormatting(value) {\n    return value.replace(/[^\\d.-]/g, '');\n  }\n  getProductsCategories() {\n    this.productService.getProductsCategoriesList().subscribe(productsCatgories => {\n      this.productsCatgories = productsCatgories;\n      console.log('ProductCategories', this.productsCatgories);\n    });\n  }\n  static {\n    this.ɵfac = function EditProductDetailDialog_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EditProductDetailDialog)(i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.ProductsServiceService), i0.ɵɵdirectiveInject(i12.ProductDetailsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditProductDetailDialog,\n      selectors: [[\"edit-product-details\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([provideNativeDateAdapter()]), i0.ɵɵStandaloneFeature],\n      decls: 52,\n      vars: 11,\n      consts: [[\"picker\", \"\"], [\"mat-dialog-title\", \"\"], [1, \"example-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-6\", \"m-b-8\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"stock\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"weigthPoundsPack\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"startingPrice\", 3, \"input\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"minimunQuantity\"], [\"formControlName\", \"collectionPoint\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-6\", \"m-b-8\"], [\"matInput\", \"\", \"formControlName\", \"harvestDate\", 3, \"matDatepicker\", \"max\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"align\", \"end\"], [\"mat-stroked-button\", \"\", \"type\", \" submit \", \"color\", \"primary \", 1, \"m-r-8\", 3, \"click\"], [\"mat-stroked-button\", \"\", \"color\", \"warn \", \"mat-dialog-close\", \"\"], [3, \"value\"]],\n      template: function EditProductDetailDialog_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\", 1);\n          i0.ɵɵtext(1, \"Edotar Productos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"p\");\n          i0.ɵɵtext(4, \" Complete la siguiente informaci\\u00F3n para editar productos. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function EditProductDetailDialog_Template_form_ngSubmit_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submitProductDetails());\n          });\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"mat-form-field\", 5)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Stock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵtemplate(12, EditProductDetailDialog_Conditional_12_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 4)(14, \"mat-form-field\", 5)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"Libras por paquete\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 7);\n          i0.ɵɵtemplate(18, EditProductDetailDialog_Conditional_18_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 4)(20, \"mat-form-field\", 5)(21, \"mat-label\");\n          i0.ɵɵtext(22, \"Precio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"input\", 8);\n          i0.ɵɵlistener(\"input\", function EditProductDetailDialog_Template_input_input_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.formatCurrencyInput($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, EditProductDetailDialog_Conditional_24_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 4)(26, \"mat-form-field\", 5)(27, \"mat-label\");\n          i0.ɵɵtext(28, \"Cantidad m\\u00EDnima\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 9);\n          i0.ɵɵtemplate(30, EditProductDetailDialog_Conditional_30_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 4)(32, \"mat-form-field\", 5)(33, \"mat-label\");\n          i0.ɵɵtext(34, \"Selecciona un punto de recolecci\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"mat-select\", 10);\n          i0.ɵɵtemplate(36, EditProductDetailDialog_mat_option_36_Template, 2, 2, \"mat-option\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(37, EditProductDetailDialog_Conditional_37_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 12)(39, \"mat-form-field\", 5)(40, \"mat-label\");\n          i0.ɵɵtext(41, \"Fecha de cosecha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(42, \"input\", 13)(43, \"mat-datepicker-toggle\", 14)(44, \"mat-datepicker\", null, 0);\n          i0.ɵɵtemplate(46, EditProductDetailDialog_Conditional_46_Template, 4, 0, \"mat-error\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(47, \"mat-dialog-actions\", 15)(48, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function EditProductDetailDialog_Template_button_click_48_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submitProductDetails());\n          });\n          i0.ɵɵtext(49, \"Actualizar Producto\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"button\", 17);\n          i0.ɵɵtext(51, \"Cancelar\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_7_0;\n          let tmp_11_0;\n          const picker_r3 = i0.ɵɵreference(45);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.productDetailsForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵconditional(((tmp_2_0 = ctx.productDetailsForm.get(\"stock\")) == null ? null : tmp_2_0.hasError(\"required\")) ? 12 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(((tmp_3_0 = ctx.productDetailsForm.get(\"weigthPoundsPack\")) == null ? null : tmp_3_0.hasError(\"required\")) ? 18 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(((tmp_4_0 = ctx.productDetailsForm.get(\"startingPrice\")) == null ? null : tmp_4_0.hasError(\"required\")) ? 24 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(((tmp_5_0 = ctx.productDetailsForm.get(\"minimunQuantity\")) == null ? null : tmp_5_0.hasError(\"required\")) ? 30 : -1);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.collectionsList);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(((tmp_7_0 = ctx.productDetailsForm.get(\"collectionPoint\")) == null ? null : tmp_7_0.hasError(\"required\")) ? 37 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"matDatepicker\", picker_r3)(\"max\", ctx.maxDate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", picker_r3);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(((tmp_11_0 = ctx.productForm.get(\"harvestDate\")) == null ? null : tmp_11_0.hasError(\"required\")) ? 46 : -1);\n        }\n      },\n      dependencies: [MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose, MatButtonModule, i4.MatButton, MatError, FormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, ReactiveFormsModule, i5.FormGroupDirective, i5.FormControlName, MatLabel, MatFormFieldModule, i6.MatFormField, i6.MatSuffix, MatInputModule, i7.MatInput, MatDatepickerModule, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, MatIconModule, CommonModule, i11.NgForOf, MatOptionModule, i9.MatOption, MatSelectModule, i10.MatSelect],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ChangeDetectionStrategy","Component","inject","MatCardModule","MatTableModule","MaterialModule","MatIconModule","MatMenuModule","MatButtonModule","MatDatepickerModule","MatSelectModule","MatOptionModule","FormControl","Validators","FormsModule","ReactiveFormsModule","FormGroup","MatInputModule","MatError","MatFormFieldModule","MatLabel","MatDialog","MatDialogActions","MatDialogClose","MatDialogContent","MatDialogTitle","MAT_DIALOG_DATA","provideNativeDateAdapter","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","collection_r2","collectionPoint_id","ɵɵadvance","ɵɵtextInterpolate1","pointName","AppProductDetailsComponent","constructor","productService","productDetailService","cdr","displayedProductDetailsColumns","productsDetailsList","productsCatgories","dialog","ngOnInit","getProductsDetailsList","subscribe","productDetailList","console","log","detectChanges","getProductsCategories","openDialog","open","CreateProductDetailsDialog","width","updateProduct","product","EditProductDetailDialog","data","deleteProduct","productId","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","next","rta","reloadProductsDetailsList","error","errors","key","hasOwnProperty","productsList","getProductsCategoriesList","__decorate","selector","standalone","imports","changeDetection","OnPush","templateUrl","collectionsService","dialogRef","changeDetector","hide","createdProductId","productForm","productName","required","categoryId","productDetailsForm","stock","weigthPoundsPack","startingPrice","minimunQuantity","collectionPoint","harvestDate","maxDate","Date","getCollectionsList","submitProduct","valid","newProduct","product_id","product_name","controls","value","category_id","parseInt","productCategories","category_name","isDeleted","setProduct","response","submitProductDetails","harvestFormatDate","unformattedPrice","removeCurrencyFormatting","get","newProductDetails","prodDeta_id","products","quantityStock","user_id","users","names","last_names","email","document_number","username","password","born_date","userType_id","userTypes","userType_name","document_id","documents","document_name","date","modified","modifiedBy","collections","address","setProductDetails","close","formatCurrencyInput","event","target","replace","Intl","NumberFormat","style","currency","minimumFractionDigits","format","parseFloat","collectionList","collectionsList","ɵɵdirectiveInject","i1","ProductsServiceService","i2","CollectionService","i3","MatDialogRef","ChangeDetectorRef","selectors","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","CreateProductDetailsDialog_Template","rf","ctx","ɵɵlistener","CreateProductDetailsDialog_Template_form_ngSubmit_5_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","ɵɵtemplate","CreateProductDetailsDialog_Conditional_12_Template","CreateProductDetailsDialog_Conditional_18_Template","CreateProductDetailsDialog_Template_input_input_23_listener","$event","CreateProductDetailsDialog_Conditional_24_Template","CreateProductDetailsDialog_Conditional_30_Template","CreateProductDetailsDialog_mat_option_36_Template","CreateProductDetailsDialog_Conditional_37_Template","CreateProductDetailsDialog_Conditional_46_Template","CreateProductDetailsDialog_Template_button_click_50_listener","ɵɵconditional","tmp_2_0","hasError","tmp_3_0","tmp_4_0","tmp_5_0","tmp_7_0","picker_r3","tmp_11_0","i4","MatButton","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i6","MatFormField","MatSuffix","i7","MatInput","i8","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","i9","MatOption","i10","MatSelect","i11","NgForOf","encapsulation","currentYear","getFullYear","getMonth","getDate","patchValue","toString","updateProductDetails","window","location","reload","i12","ProductDetailsService","EditProductDetailDialog_Template","EditProductDetailDialog_Template_form_ngSubmit_5_listener","EditProductDetailDialog_Conditional_12_Template","EditProductDetailDialog_Conditional_18_Template","EditProductDetailDialog_Template_input_input_23_listener","EditProductDetailDialog_Conditional_24_Template","EditProductDetailDialog_Conditional_30_Template","EditProductDetailDialog_mat_option_36_Template","EditProductDetailDialog_Conditional_37_Template","EditProductDetailDialog_Conditional_46_Template","EditProductDetailDialog_Template_button_click_48_listener"],"sources":["D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-details-table\\product-details.component.ts","D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-details-table\\create-product-details.html","D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\pages\\ui-components\\product-details-table\\edit-product-details.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  inject,\n  Inject,\n} from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport {\n  FormControl,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n  FormGroup,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport {\n  MatError,\n  MatFormFieldModule,\n  MatLabel,\n} from '@angular/material/form-field';\nimport {\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport Swal from 'sweetalert2';\nimport {\n  Product,\n  ProductCategory,\n  ProductDetails,\n} from 'src/app/interfaces/ProductsInterfaces';\nimport { ProductsServiceService } from 'src/app/services/products-service.service';\nimport { CollectionService } from 'src/app/services/collection.service';\nimport { Collection } from 'src/app/interfaces/CollectionInterfaces';\nimport { ProductDetailsService } from 'src/app/services/product-details.service';\n\n@Component({\n  selector: 'app-product-details',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    CommonModule,\n    MatCardModule,\n    MaterialModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatIconModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './product.component.html',\n})\nexport class AppProductDetailsComponent implements OnInit {\n  displayedProductDetailsColumns: string[] = [\n    'id',\n    'product_name',\n    'category_name',\n    'quantityStock',\n    'weigthPoundsPack',\n    'startingPrice',\n    'minimunQuantity',\n    'pointName',\n    'harvestDate',\n    'actions',\n  ];\n\n  productsDetailsList: ProductDetails[] = [];\n  productsCatgories: ProductCategory[] = [];\n  myCProduct: Product | null;\n  readonly dialog = inject(MatDialog);\n\n  constructor(\n    private productService: ProductsServiceService,\n    private productDetailService : ProductDetailsService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.productDetailService\n      .getProductsDetailsList()\n      .subscribe((productDetailList) => {\n        this.productsDetailsList = productDetailList;\n        console.log(this.productsDetailsList);\n        this.cdr.detectChanges();\n      });\n\n    this.getProductsCategories();\n  }\n\n  openDialog() {\n    this.dialog.open(CreateProductDetailsDialog, {\n      width: '600px',\n    });\n  }\n\n  updateProduct(product: ProductDetails) {\n    console.log(product);\n\n    this.dialog.open(EditProductDetailDialog, {\n      width: '600px',\n      data: product,\n    });\n  }\n\n  deleteProduct(productId: number) {\n    Swal.fire({\n      title: '¿Estás seguro de eliminar este producto?',\n      text: 'Esta acción no se puede deshacer',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminar',\n      cancelButtonText: 'Cancelar',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.productService.deleteProduct(productId).subscribe({\n          next: (rta) => {\n            Swal.fire({\n              title: '¡Hecho!',\n              text: 'El producto ha sido eliminado.',\n              icon: 'success',\n            }).then(() => {\n              this.reloadProductsDetailsList();\n              this.cdr.detectChanges();\n            });\n          },\n          error: (error) => {\n            console.error('Error de validación:', error.error.errors);\n\n            Swal.fire({\n              title: 'Error',\n              text: 'Ocurrió un error al eliminar el producto.',\n              icon: 'error',\n            });\n\n            if (error.error.errors) {\n              for (const key in error.error.errors) {\n                if (error.error.errors.hasOwnProperty(key)) {\n                  console.log(\n                    `Error en el campo ${key}:`,\n                    error.error.errors[key]\n                  );\n                }\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  reloadProductsDetailsList() {\n    this.productDetailService.getProductsDetailsList().subscribe((productsList) => {\n      this.productsDetailsList = productsList;\n      console.log(\n        'Lista actualizada de productsList:',\n        this.productsDetailsList\n      );\n    });\n  }\n\n  getProductsCategories() {\n    this.productService\n      .getProductsCategoriesList()\n      .subscribe((productsCatgories) => {\n        this.productsCatgories = productsCatgories;\n      });\n  }\n}\n\n@Component({\n  selector: 'create-product-details',\n  templateUrl: 'create-product-details.html',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n    MatButtonModule,\n    MatError,\n    FormsModule,\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatOptionModule,\n    MatSelectModule,\n    CommonModule,\n  ],\n  providers: [provideNativeDateAdapter()],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateProductDetailsDialog implements OnInit {\n  hide = true;\n  maxDate: Date;\n  productsList: Product[] = [];\n  productsCatgories: ProductCategory[] = [];\n  myCProduct: Product | null;\n  public createdProductId: number = 0;\n  collectionsList: Collection[];\n\n  constructor(\n    private productService: ProductsServiceService,\n    private collectionsService: CollectionService,\n    public dialogRef: MatDialogRef<CreateProductDetailsDialog>,\n    private changeDetector: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.maxDate = new Date();\n    this.getProductsCategories();\n    this.getCollectionsList();\n  }\n\n  productForm = new FormGroup({\n    productName: new FormControl('', [Validators.required]),\n    categoryId: new FormControl('', [Validators.required]),\n  });\n\n  productDetailsForm = new FormGroup({\n    stock: new FormControl('', [Validators.required]),\n    weigthPoundsPack: new FormControl('', [Validators.required]),\n    startingPrice: new FormControl('', [Validators.required]),\n    minimunQuantity: new FormControl('', [Validators.required]),\n    collectionPoint: new FormControl('', [Validators.required]),\n    harvestDate: new FormControl('', [Validators.required]),\n  });\n\n  submitProduct() {\n    if (this.productForm.valid) {\n      let newProduct: Product = {\n        product_id: 0,\n        product_name: this.productForm.controls['productName'].value ?? '',\n        category_id: this.productForm.controls['categoryId'].value\n          ? parseInt(this.productForm.controls['categoryId'].value)\n          : 0,\n        productCategories: {\n          category_id: 0,\n          category_name: '',\n          isDeleted: false,\n        },\n        isDeleted: false,\n      };\n      this.productService.setProduct(newProduct).subscribe({\n        next: (response) => {\n          console.log(response);\n          this.createdProductId = (response as Product).product_id;\n          console.log(this.createdProductId);\n          this.changeDetector.detectChanges();\n        },\n        error: (error) => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el producto.',\n            icon: 'error',\n          });\n        },\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n\n  submitProductDetails() {\n    console.log(this.productDetailsForm);\n\n    if (this.productDetailsForm.valid) {\n      let harvestFormatDate = new Date(\n        this.productDetailsForm.controls['harvestDate'].value ?? this.maxDate\n      );\n      let unformattedPrice = this.removeCurrencyFormatting(\n        this.productForm.get('startingPrice')?.value ?? '0'\n      );\n      let newProductDetails: ProductDetails = {\n        prodDeta_id: 0,\n        product_id: this.createdProductId,\n        products: {\n          product_id: 0,\n          product_name: 'string',\n          category_id: 0,\n          productCategories: {\n            category_id: 0,\n            category_name: 'string',\n            isDeleted: false,\n          },\n          isDeleted: false,\n        },\n        quantityStock: this.productDetailsForm.controls['stock'].value\n          ? parseInt(this.productDetailsForm.controls['stock'].value)\n          : 0,\n        weigthPoundsPack: this.productDetailsForm.controls['weigthPoundsPack']\n          .value\n          ? parseInt(this.productDetailsForm.controls['weigthPoundsPack'].value)\n          : 0,\n        startingPrice: parseInt(unformattedPrice),\n        minimunQuantity: this.productDetailsForm.controls['minimunQuantity']\n          .value\n          ? parseInt(this.productDetailsForm.controls['minimunQuantity'].value)\n          : 0,\n        user_id: 1,\n        users: {\n          user_id: 0,\n          names: 'string',\n          last_names: 'string',\n          email: 'string',\n          document_number: 'string',\n          username: 'string',\n          password: 'string',\n          born_date: '2024-10-27T19:38:47.562Z',\n          userType_id: 0,\n          userTypes: {\n            userType_id: 0,\n            userType_name: 'string',\n            isDeleted: true,\n          },\n          document_id: 0,\n          documents: {\n            document_id: 0,\n            document_name: 'string',\n            isDeleted: true,\n          },\n          date: new Date(),\n          modified: new Date(),\n          modifiedBy: 'string',\n          isDeleted: false,\n        },\n        collectionPoint_id: this.productDetailsForm.controls['collectionPoint']\n          .value\n          ? parseInt(this.productDetailsForm.controls['collectionPoint'].value)\n          : 0,\n        collections: {\n          collectionPoint_id: 0,\n          pointName: 'string',\n          address: 'string',\n          isDeleted: false,\n        },\n        harvestDate: harvestFormatDate,\n        isDeleted: false,\n      };\n      this.productService.setProductDetails(newProductDetails).subscribe({\n        next: (response) => {\n          console.log(response);\n          Swal.fire({\n            title: '¡Usuario Creado!',\n            text: 'La información del usuario ha sido guardada correctamente.',\n            icon: 'success',\n          }).then(() => {\n            this.dialogRef.close(true);\n            this.changeDetector.detectChanges();\n          });\n        },\n        error: (error) => {\n          console.error('Error de validación:', error.error.errors);\n          Swal.fire({\n            title: 'Error',\n            text: 'Ocurrió un error al actualizar el producto.',\n            icon: 'error',\n          });\n        },\n      });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n\n  formatCurrencyInput(event: any) {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, ''); // Eliminar caracteres no numéricos\n    value = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n    }).format(parseFloat(value) / 100); // Aplicar formato moneda\n    event.target.value = value;\n  }\n\n  removeCurrencyFormatting(value: string): string {\n    return value.replace(/[^\\d.-]/g, '');\n  }\n\n  getProductsCategories() {\n    this.productService\n      .getProductsCategoriesList()\n      .subscribe((productsCatgories) => {\n        this.productsCatgories = productsCatgories;\n        console.log('ProductCategories', this.productsCatgories);\n      });\n  }\n\n  getCollectionsList() {\n    this.collectionsService.getCollectionsList().subscribe((collectionList) => {\n      this.collectionsList = collectionList;\n      console.log(\n        'Lista actualizada de collectionsList:',\n        this.collectionsList\n      );\n    });\n  }\n}\n\n@Component({\n  selector: 'edit-product-details',\n  templateUrl: 'edit-product-details.html',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n    MatButtonModule,\n    MatError,\n    FormsModule,\n    ReactiveFormsModule,\n    MatLabel,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatIconModule,\n    CommonModule,\n    MatOptionModule,\n    MatSelectModule,\n  ],\n  providers: [provideNativeDateAdapter()],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditProductDetailDialog implements OnInit {\n  hide = true;\n  maxDate: Date;\n  productId: number = 0;\n  productsList: Product[] = [];\n  productsCatgories: ProductCategory[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<EditProductDetailDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: ProductDetails,\n    private productService: ProductsServiceService,\n    private productDetailService : ProductDetailsService,\n  ) {}\n\n  productDetailsForm = new FormGroup({\n    stock: new FormControl('', [Validators.required]),\n    weigthPoundsPack: new FormControl('', [Validators.required]),\n    startingPrice: new FormControl('', [Validators.required]),\n    minimunQuantity: new FormControl('', [Validators.required]),\n    collectionPoint: new FormControl('', [Validators.required]),\n    harvestDate: new FormControl('', [Validators.required]),\n  });\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    this.maxDate = new Date(\n      currentYear - 18,\n      new Date().getMonth(),\n      new Date().getDate()\n    );\n\n    this.getProductsCategories();\n\n    this.productDetailsForm.patchValue({\n      stock: this.data.quantityStock.toString(),\n      weigthPoundsPack: this.data.weigthPoundsPack.toString(),\n      startingPrice: this.data.startingPrice.toString(),\n      minimunQuantity: this.data.minimunQuantity.toString(),\n      collectionPoint: this.data.collectionPoint_id.toString(),\n      harvestDate: this.data.harvestDate.toString(),\n    });\n  }\n\n  submitProductDetails() {\n    if (this.productDetailsForm.valid) {\n      this.productId = this.data.product_id;\n\n      let harvestFormatDate = new Date(\n        this.productDetailsForm.controls['harvestDate'].value ?? this.maxDate\n      );\n      let unformattedPrice = this.removeCurrencyFormatting(\n        this.productDetailsForm.get('startingPrice')?.value ?? '0'\n      );\n      let newProductDetails: ProductDetails = {\n        prodDeta_id: 0,\n        product_id: this.data.product_id,\n        products: {\n          product_id: 0,\n          product_name: 'string',\n          category_id: 0,\n          productCategories: {\n            category_id: 0,\n            category_name: 'string',\n            isDeleted: false,\n          },\n          isDeleted: false,\n        },\n        quantityStock: this.productDetailsForm.controls['stock'].value\n          ? parseInt(this.productDetailsForm.controls['stock'].value)\n          : 0,\n        weigthPoundsPack: this.productDetailsForm.controls['weigthPoundsPack']\n          .value\n          ? parseInt(this.productDetailsForm.controls['weigthPoundsPack'].value)\n          : 0,\n        startingPrice: parseInt(unformattedPrice),\n        minimunQuantity: this.productDetailsForm.controls['minimunQuantity']\n          .value\n          ? parseInt(this.productDetailsForm.controls['minimunQuantity'].value)\n          : 0,\n        user_id: this.data.user_id,\n        users: {\n          user_id: 0,\n          names: 'string',\n          last_names: 'string',\n          email: 'string',\n          document_number: 'string',\n          username: 'string',\n          password: 'string',\n          born_date: '2024-10-27T19:38:47.562Z',\n          userType_id: 0,\n          userTypes: {\n            userType_id: 0,\n            userType_name: 'string',\n            isDeleted: true,\n          },\n          document_id: 0,\n          documents: {\n            document_id: 0,\n            document_name: 'string',\n            isDeleted: true,\n          },\n          date: new Date(),\n          modified: new Date(),\n          modifiedBy: 'string',\n          isDeleted: false,\n        },\n        collectionPoint_id: this.productDetailsForm.controls['collectionPoint']\n          .value\n          ? parseInt(this.productDetailsForm.controls['collectionPoint'].value)\n          : 0,\n        collections: {\n          collectionPoint_id: 0,\n          pointName: 'string',\n          address: 'string',\n          isDeleted: false,\n        },\n        harvestDate: harvestFormatDate,\n        isDeleted: false,\n      };\n      this.productDetailService.updateProductDetails(newProductDetails, this.data.product_id)\n        .subscribe({\n          next: (response) => {\n            console.log(response);\n            \n            Swal.fire({\n              title: '¡Producto actualizado!',\n              text: 'La información del Producto ha sido actualizada correctamente.',\n              icon: 'success',\n            }).then(() => {\n              this.dialogRef.close(true);\n              window.location.reload();\n            });\n          },\n          error: (error) => {\n            console.error('Error de validación:', error.error.errors);\n            Swal.fire({\n              title: 'Error',\n              text: 'Ocurrió un error al actualizar el Producto.',\n              icon: 'error',\n            });\n          },\n        });\n    } else {\n      console.error('Formulario no es válido');\n    }\n  }\n\n  formatCurrencyInput(event: any) {\n    let value = event.target.value;\n    value = value.replace(/\\D/g, ''); // Eliminar caracteres no numéricos\n    value = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n    }).format(parseFloat(value) / 100); // Aplicar formato moneda\n    event.target.value = value;\n  }\n\n  removeCurrencyFormatting(value: string): string {\n    return value.replace(/[^\\d.-]/g, '');\n  }\n\n  getProductsCategories() {\n    this.productService\n      .getProductsCategoriesList()\n      .subscribe((productsCatgories) => {\n        this.productsCatgories = productsCatgories;\n        console.log('ProductCategories', this.productsCatgories);\n      });\n  }\n}\n","<h2 mat-dialog-title>Crear Detalle de Producto</h2>\r\n\r\n<mat-dialog-content>\r\n    <p>\r\n        Complete la siguiente información para crear el detalle de los productos.\r\n    </p>\r\n    <form class=\"example-form\" [formGroup]=\"productDetailsForm\" (ngSubmit)=\"submitProductDetails()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Stock</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"stock\"> @if (productDetailsForm.get('stock')?.hasError('required')) {\r\n                    <mat-error>La cantidad en stock es <strong>obligatoria.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Libras por paquete</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"weigthPoundsPack\"> @if (productDetailsForm.get('weigthPoundsPack')?.hasError('required')) {\r\n                    <mat-error>Ingrese las libras por paquete para <strong>continuar.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Precio</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"startingPrice\" (input)=\"formatCurrencyInput($event)\"> @if (productDetailsForm.get('startingPrice')?.hasError('required')) {\r\n                    <mat-error>El costo del producto es <strong>obligatorio.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Cantidad mínima</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"minimunQuantity\"> @if (productDetailsForm.get('minimunQuantity')?.hasError('required')) {\r\n                    <mat-error>La cantidad mínima es <strong>obligatoria.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Selecciona un punto de recolección</mat-label>\r\n                    <mat-select formControlName=\"collectionPoint\">\r\n                        <mat-option *ngFor=\"let collection of collectionsList\" [value]=\"collection.collectionPoint_id\">\r\n                            {{ collection.pointName }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    @if (productDetailsForm.get('collectionPoint')?.hasError('required')) {\r\n                    <mat-error>El punto de recolección es <strong>obligatorio.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-lg-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Fecha de cosecha</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"harvestDate\" [max]=\"maxDate\">\r\n                    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    @if (productForm.get('harvestDate')?.hasError('required')) {\r\n                    <mat-error>La fecha de cosecha es <strong>obligatoria.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button color=\"warn \" mat-dialog-close>Cancelar</button>\r\n    <button mat-flat-button type=\" submit \" color=\"primary \" class=\"m-r-8 \" (click)=\"submitProductDetails()\">Añadir\r\n        Detalles de Producto</button>\r\n</mat-dialog-actions>","<h2 mat-dialog-title>Edotar Productos</h2>\r\n<mat-dialog-content>\r\n    <p>\r\n        Complete la siguiente información para editar productos.\r\n    </p>\r\n    <form class=\"example-form\" [formGroup]=\"productDetailsForm\" (ngSubmit)=\"submitProductDetails()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Stock</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"stock\"> @if (productDetailsForm.get('stock')?.hasError('required')) {\r\n                    <mat-error>La cantidad en stock es <strong>obligatoria.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Libras por paquete</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"weigthPoundsPack\"> @if (productDetailsForm.get('weigthPoundsPack')?.hasError('required')) {\r\n                    <mat-error>Ingrese las libras por paquete para <strong>continuar.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Precio</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"startingPrice\" (input)=\"formatCurrencyInput($event)\"> @if (productDetailsForm.get('startingPrice')?.hasError('required')) {\r\n                    <mat-error>El costo del producto es <strong>obligatorio.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Cantidad mínima</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"minimunQuantity\"> @if (productDetailsForm.get('minimunQuantity')?.hasError('required')) {\r\n                    <mat-error>La cantidad mínima es <strong>obligatoria.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Selecciona un punto de recolección</mat-label>\r\n                    <mat-select formControlName=\"collectionPoint\">\r\n                        <mat-option *ngFor=\"let collection of collectionsList\" [value]=\"collection.collectionPoint_id\">\r\n                            {{ collection.pointName }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    @if (productDetailsForm.get('collectionPoint')?.hasError('required')) {\r\n                    <mat-error>El punto de recolección es <strong>obligatorio.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-lg-6 m-b-8\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n                    <mat-label>Fecha de cosecha</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"harvestDate\" [max]=\"maxDate\">\r\n                    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    @if (productForm.get('harvestDate')?.hasError('required')) {\r\n                    <mat-error>La fecha de cosecha es <strong>obligatoria.</strong></mat-error>\r\n                    }\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\" submit \" color=\"primary \" class=\"m-r-8 \" (click)=\"submitProductDetails()\">Actualizar Producto</button>\r\n    <button mat-stroked-button color=\"warn \" mat-dialog-close>Cancelar</button>\r\n</mat-dialog-actions>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}