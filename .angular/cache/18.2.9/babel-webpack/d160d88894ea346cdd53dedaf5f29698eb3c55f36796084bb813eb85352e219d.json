{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersListService {\n  constructor(http) {\n    this.http = http;\n    this.path = environment.api;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getUsersList() {\n    const url = this.path + '/Users';\n    return this.http.get(url);\n  }\n  setUser(userObject) {\n    const url = this.path + '/Users';\n    return this.http.post(url, JSON.stringify(userObject), {\n      headers: this.headers\n    });\n  }\n  updateUser(userObject, userId) {\n    const url = this.path + '/Users/' + userId;\n    return this.http.put(url, JSON.stringify(userObject), {\n      headers: this.headers\n    });\n  }\n  reloadUsersList() {\n    this.getUsersList().subscribe(usersList => {\n      console.log('Lista actualizada de usuarios:', usersList);\n      return usersList;\n    });\n  }\n  deleteUser(userId) {\n    const url = this.path + '/Users/' + userId;\n    return this.http.delete(url, {\n      headers: this.headers\n    });\n  }\n  static {\n    this.ɵfac = function UsersListService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UsersListService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsersListService,\n      factory: UsersListService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","HttpHeaders","UsersListService","constructor","http","path","api","headers","getUsersList","url","get","setUser","userObject","post","JSON","stringify","updateUser","userId","put","reloadUsersList","subscribe","usersList","console","log","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\UNIVERSIDAD\\TRABAJOS free\\master\\material-pro-angular-lite-master\\package\\src\\app\\services\\users-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { User } from '../interfaces/UsersInterfaces';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsersListService {\r\n  private path = environment.api;\r\n  private headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  });\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsersList() {\r\n    const url = this.path + '/Users';\r\n    return this.http.get<User[]>(url);\r\n  }\r\n\r\n  setUser(userObject: User) {\r\n    const url = this.path + '/Users';\r\n\r\n    return this.http.post(url, JSON.stringify(userObject), { headers: this.headers })\r\n  }\r\n\r\n  updateUser(userObject: User, userId: number) {\r\n    const url = this.path + '/Users/' + userId;\r\n    return this.http.put(url, JSON.stringify(userObject), { headers: this.headers });\r\n  }\r\n\r\n  reloadUsersList() {\r\n    this.getUsersList().subscribe((usersList) => {\r\n      console.log('Lista actualizada de usuarios:', usersList);\r\n      return usersList;\r\n    });\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    const url = this.path + '/Users/' + userId;\r\n    return this.http.delete(url, { headers: this.headers });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,mCAAmC;AAE/D,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,IAAI,GAAGL,WAAW,CAACM,GAAG;IACtB,KAAAC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAChC,cAAc,EAAE;KACjB,CAAC;EAEqC;EAEvCO,YAAYA,CAAA;IACV,MAAMC,GAAG,GAAG,IAAI,CAACJ,IAAI,GAAG,QAAQ;IAChC,OAAO,IAAI,CAACD,IAAI,CAACM,GAAG,CAASD,GAAG,CAAC;EACnC;EAEAE,OAAOA,CAACC,UAAgB;IACtB,MAAMH,GAAG,GAAG,IAAI,CAACJ,IAAI,GAAG,QAAQ;IAEhC,OAAO,IAAI,CAACD,IAAI,CAACS,IAAI,CAACJ,GAAG,EAAEK,IAAI,CAACC,SAAS,CAACH,UAAU,CAAC,EAAE;MAAEL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACnF;EAEAS,UAAUA,CAACJ,UAAgB,EAAEK,MAAc;IACzC,MAAMR,GAAG,GAAG,IAAI,CAACJ,IAAI,GAAG,SAAS,GAAGY,MAAM;IAC1C,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAACT,GAAG,EAAEK,IAAI,CAACC,SAAS,CAACH,UAAU,CAAC,EAAE;MAAEL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAClF;EAEAY,eAAeA,CAAA;IACb,IAAI,CAACX,YAAY,EAAE,CAACY,SAAS,CAAEC,SAAS,IAAI;MAC1CC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,SAAS,CAAC;MACxD,OAAOA,SAAS;IAClB,CAAC,CAAC;EACJ;EAEAG,UAAUA,CAACP,MAAc;IACvB,MAAMR,GAAG,GAAG,IAAI,CAACJ,IAAI,GAAG,SAAS,GAAGY,MAAM;IAC1C,OAAO,IAAI,CAACb,IAAI,CAACqB,MAAM,CAAChB,GAAG,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACzD;;;uCAlCWL,gBAAgB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhB3B,gBAAgB;MAAA4B,OAAA,EAAhB5B,gBAAgB,CAAA6B,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}